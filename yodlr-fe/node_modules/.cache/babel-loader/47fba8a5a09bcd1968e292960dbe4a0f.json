{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alanpuglisi/Springboard/yodler/yodler-fe/src/UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Table } from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport UserRow from './UserRow';\nimport { getAllUsers } from './actions/users';\n\nconst UserList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    users\n  } = useSelector(s => s.users);\n  useEffect(() => {\n    dispatch(getAllUsers());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    striped: true,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: users ? users.map(u => /*#__PURE__*/_jsxDEV(UserRow, {\n        user: u\n      }, u.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 41\n      }, this)) : \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserList, \"tbZ6KJdmADm7ZyMUg0L8SjVwHkk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/alanpuglisi/Springboard/yodler/yodler-fe/src/UserList.js"],"names":["React","useEffect","Table","useSelector","useDispatch","UserRow","getAllUsers","UserList","props","dispatch","users","s","map","u","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,QAA4B,iBAA5B;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAYP,WAAW,CAACQ,CAAC,IAAIA,CAAC,CAACD,KAAR,CAA7B;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACH,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;AAGA,sBACI,QAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAA,4BACI;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA,gBACKC,KAAK,GAAGA,KAAK,CAACE,GAAN,CAAUC,CAAC,iBAAI,QAAC,OAAD;AAAoB,QAAA,IAAI,EAAEA;AAA1B,SAAcA,CAAC,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAf,CAAH,GAAqD;AAD/D;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CArBD;;GAAMP,Q;UACeH,W,EACCD,W;;;KAFhBI,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Table } from 'reactstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport UserRow from './UserRow';\nimport { getAllUsers } from './actions/users';\n\nconst UserList = (props) => {\n    const dispatch = useDispatch();\n    const { users } = useSelector(s => s.users);\n    useEffect(() => {\n        dispatch(getAllUsers());\n    }, [dispatch]);\n    return (\n        <Table striped>\n            <thead>\n                <tr>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Email</th>\n                    <th>State</th>\n                </tr>\n            </thead>\n            <tbody>\n                {users ? users.map(u => <UserRow key={u.id} user={u} />) : \"loading...\"}\n            </tbody>\n        </Table>\n    );\n};\n\nexport default UserList;"]},"metadata":{},"sourceType":"module"}