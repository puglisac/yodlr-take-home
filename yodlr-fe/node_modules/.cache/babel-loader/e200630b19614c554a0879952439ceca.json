{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alanpuglisi/Springboard/yodler/yodler-fe/src/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { createUser } from './actions/users';\n\nconst RegisterForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const initialState = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\"\n  };\n  const [formData, setFormData] = useState(initialState);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(data => ({ ...data,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    try {\n      dispatch(createUser(formData));\n      setFormData(initialState);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        form: true,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"firstName\",\n              children: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"firstName\",\n              id: \"firstName\",\n              onChange: handleChange,\n              value: formData.firstName,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"lastName\",\n              children: \"Last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"lastName\",\n              id: \"lastName\",\n              onChange: handleChange,\n              value: formData.lastName,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          onChange: handleChange,\n          value: formData.email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterForm, \"IazM5myyGkcga1UvMDVhSWXGGWw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/alanpuglisi/Springboard/yodler/yodler-fe/src/RegisterForm.js"],"names":["React","useState","useDispatch","Col","Row","Button","Form","FormGroup","Label","Input","createUser","RegisterForm","dispatch","initialState","firstName","lastName","email","formData","setFormData","handleChange","e","name","value","target","data","handleSubmit","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { createUser } from './actions/users';\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    const initialState = {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\"\n    };\n    const [formData, setFormData] = useState(initialState);\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData((data) => ({\n            ...data,\n            [name]: value\n        }));\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        try {\n            dispatch(createUser(formData));\n            setFormData(initialState);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n    return (\n        <div className=\"container\">\n            <Form onSubmit={handleSubmit}>\n                <Row form>\n                    <Col md={6}>\n                        <FormGroup>\n                            <Label for=\"firstName\">First name</Label>\n                            <Input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={handleChange} value={formData.firstName} required />\n                        </FormGroup>\n                    </Col>\n                    <Col md={6}>\n                        <FormGroup>\n                            <Label for=\"lastName\">Last name</Label>\n                            <Input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={handleChange} value={formData.lastName} required />\n                        </FormGroup>\n                    </Col>\n                </Row>\n                <FormGroup>\n                    <Label for=\"email\">Email</Label>\n                    <Input type=\"email\" name=\"email\" id=\"email\" onChange={handleChange} value={formData.email} required />\n                </FormGroup>\n\n                <Button>Sign in</Button>\n            </Form>\n        </div>\n    );\n};\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}